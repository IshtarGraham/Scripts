binary_sensor:
  - platform: mqtt
    name: "Motion Sensor"
    state_topic: "home/sensors/motion"
    qos: 0
    payload_on: "ON"
    payload_off: "OFF"

light:
  - platform: mqtt
    name: "Living Room Light"
    state_topic: "home/lights/living_room"
    command_topic: "home/lights/living_room/set"
    brightness_state_topic: "home/lights/living_room/brightness"
    brightness_command_topic: "home/lights/living_room/set/brightness"
    on_command_type: "brightness"
    optimistic: false
    qos: 0

This configuration includes a binary sensor named "Motion Sensor" and a light named "Living Room Light" that you can control via MQTT. Adjust the topics and payloads according to your MQTT setup.

Step 2: Create an automation YAML file

Create a new file named automations.yaml in the same directory as configuration.yaml. Add the following content:

yaml

- id: '1234567890'
  alias: 'Turn on Living Room Light on Motion'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor
    to: 'on'
  action:
    service: light.turn_on
    entity_id: light.living_room_light

This automation triggers when the state of the binary sensor (binary_sensor.motion_sensor) changes to 'on'. When motion is detected, it turns on the living room light (light.living_room_light).

Step 3: Restart Home Assistant

After making these changes, restart Home Assistant for the new configuration and automation to take effect.

Step 4: Test the Automation

Now, whenever motion is detected (assuming your MQTT topics and payloads are configured correctly), the living room light should turn on.

This is a basic example, and Home Assistant provides a powerful automation engine that allows you to create complex automations based on various triggers and conditions. You can explore more advanced automation scenarios in the official documentation.

Feel free to ask if you have any specific questions or if you'd like assistance with more advanced automations!
User
instead of motion the automation is waiting for an http request can you show me how it is done 
ChatGPT

Certainly! If you want to trigger an automation based on an HTTP request, you can use the webhook trigger in Home Assistant. Here's an example:

Step 1: Edit automations.yaml

Add the following automation to your automations.yaml file:

yaml

- id: '9876543210'
  alias: 'Turn on Living Room Light on HTTP Request'
  trigger:
    platform: webhook
    webhook_id: living_room_light_trigger
  action:
    service: light.turn_on
    entity_id: light.living_room_light

In this example, the automation is triggered by a webhook (webhook_id: living_room_light_trigger), and when triggered, it turns on the living room light (light.living_room_light).

Step 2: Restart Home Assistant

After adding the automation, restart Home Assistant to apply the changes.

Step 3: Generate a Webhook URL

Go to the Home Assistant Developer Tools -> Services in the Home Assistant UI. Choose the automation.trigger service and enter the following data:

    domain: webhook
    service: trigger
    service data: { "webhook_id": "living_room_light_trigger" }

Click on "CALL SERVICE." This will trigger the automation using the webhook and simulate an HTTP request.

Step 4: Test the Automation

Now, whenever you send an HTTP request to the generated webhook URL, the living room light should turn on.

Remember to replace "living_room_light_trigger" with your preferred webhook ID.

This is a basic example, and you can expand on it by adding conditions, actions, and more based on your specific use case. Let me know if you have any questions or need further clarification!
























After adding the automation, restart Home Assistant to apply the changes.

Step 3: Generate a Webhook URL

Go to the Home Assistant Developer Tools -> Services in the Home Assistant UI. Choose the automation.trigger service and enter the following data:

    domain: webhook
    service: trigger
    service data: { "webhook_id": "living_room_light_trigger" }

Click on "CALL SERVICE." This will trigger the automation using the webhook and simulate an HTTP request.

Step 4: Test the Automation

Now, whenever you send an HTTP request to the generated webhook URL, the living room light should turn on.

Remember to replace "living_room_light_trigger" with your preferred webhook ID.

This is a basic example, and you can expand on it by adding conditions, actions, and more based on your specific use case. Let me know if you have any questions or need further clarification!
